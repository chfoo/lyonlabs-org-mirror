          ÄESÔERM 128 Ö2.00                                       ÊUNE 1990          6.6 ÐARITY ÂIT           --------------                ÔHE PARITY BIT IS THE CAUSE OF MOST OF COMMUNICATIONS          HEADACHES -- AND FOR ALL INTENTS AND PURPOSES IT IS USELESS!  ÔHE          IDEA BEHIND PARITY IS THAT YOU COUNT ALL OF THE 'ONE' BITS IN THE          DATA BYTE.  ÙOUR GOAL IS TO MAKE THE NUMBER OF 'ONE' BITS ALWAYS          ODD OR ALWAYS EVEN.  ÙOU THEN ADD ON A BIT (THE PARITY BIT) TO          MAKE THE TOTAL NUMBER OF ONES EVEN OR ODD (DEPENDING ON THE          STANDARD).  ÙOU THEN TRANSMIT THE BYTE.  ÔHE OTHER END THEN          COUNTS ALL OF THE ONE BITS AND, IF THERE IS AN ODD NUMBER OF ONES          WHEN THERE SHOULD BE AN EVEN NUMBER, THERE HAS BEEN AN ERROR!  ÏF          COURSE, WHAT THE ERROR WAS, WE HAVEN'T GOT A CLUE -- AND IT MAY          HAVE BEEN THE PARITY BIT THAT WAS GARBAGED IN THE FIRST PLACE.           ÎO MATTER HOW SILLY WE ALL THINK PARITY IS, IT IS USED, AND WE          MUST USE IT TOO!  ÐARITY ONLY MAKES SENSE WHEN USING SEVEN BITS          (WELL, NO-ONE EVER USES PARITY WITH 8 BITS!).  ÔHE PARITY MODES          ARE:          ÎONE  -Î- DO NOT GENERATE A PARITY BIT (USED WITH 8 BITS).          ÏDD   -Ï- MAKE THE NUMBER OF ONE BITS ODD.          ÅVEN  -Å- MAKE THE NUMBER OF ONE BITS EVEN.          ÍARK  -Í- FORCE THE PARITY BIT TO BE A ONE.          ÓPACE -Ó- FORCE THE PARITY BIT TO BE A ZERO.          ÔHE MOST COMMON DATA/PARITY/STOP BIT SETTINGS ARE:          8-Î-1, 7-Å-1 AND 7-Í-1.          ÉT IS ÖÅÒÙ IMPORTANT TO GET THE BYTE FRAME SET UP CORRECTLY.  ÆOR          INSTANCE, CONSIDER WHEN ÄESÔERM IS SET TO 8-Î-1 BUT IS TALKING TO          SOMETHING THAT EXPECTS 7-Å-1:  ×HEN ÄESÔERM SENDS A BYTE, IT WILL          NOT ADD A PARITY BIT, AND AS SUCH THE RECEIVER WILL GENERATE A          PARITY ERROR ABOUT HALF THE TIME.  ÏN THE OTHER HAND, ÄESÔERM          WILL RECEIVE EIGHT BITS OF DATA, BUT WILL INTERPRET THE EIGHTH          BIT AS A DATA BIT INSTEAD OF A PARITY BIT.  ÄESÔERM IS QUITE          HAPPY TO DISPLAY CHARACTERS THAT HAVE THE HIGH BIT SET (AFTER          ALL, THAT'S WHAT 8 BITS MEAN!). ÃONSEQUENTLY, ÄESÔERM WILL          DISPLAY ABOUT HALF OF THE INCOMING CHARACTERS AS GARBAGE!  ×HEN          ÄESÔERM IS IN 7 DATA BIT MODE, IT SIMPLY IGNORES THE INCOMING          PARITY BITS, SINCE WE THE HUMAN MIGHT AS WELL JUDGE WHAT IS          GARBAGE AND WHAT IS NOT.  ÄESÔERM DOES HOWEVER TRANSMIT PARITY          PROPERLY.                                          23          ÄESÔERM 128 Ö2.00                                       ÊUNE 1990          6.7 ÍASK ÈIGH ÂIT           -----------------                ÔHIS OPTION HELPS OVERCOME THE PROBLEMS CAUSED BY INCORRECT          PARITY.  ÍOST SYSTEMS THESE DAYS ALSO IGNORE PARITY, AND SO, EVEN          THOUGH THE PARITIES ARE MISMATCHED, INFORMATION CAN STILL BE          TRANSFERRED.  ÉF ÄESÔERM IS IN 8 BIT MODE, HAVING THE HIGH BIT          STRIPPED WILL, IN EFFECT, ALLOW ÄESÔERM TO RECEIVE DATA IS IF IT          WERE 7 BITS WIDE.  ÔHIS FEATURE BECOMES ESPECIALLY USEFUL WHEN          YOU CALL A SYSTEM THAT HAS A GATEWAY TO OTHER SYSTEMS.           ÓOMETIMES, THE HOST USES DIFFERENT SETTINGS TO THAT OF THE          SERVICES.  ÉN SUCH A CASE, YOU MAY SET ÄESÔERM TO 8-Î-1 AND          COMFORTABLY SPEAK TO SYSTEMS THAT USE 7-Å-1 OR 7-Í-1 (IF THEY          IGNORE PARITY TOO!).          6.8 ØON/ØOFF ÈANDSHAKING           ------------------------                ØON/ØOFF HANDSHAKING IS A WIDELY USED METHOD TO CONTROL THE          TRANSMISSION OF CHARACTERS.  ×HEN A RECEIVING COMPUTER DOES NOT          WANT TO RECEIVE ANY MORE CHARACTERS FOR A SHORT TIME, IT WILL          SEND AN ØOFF (ÄÃ3) AND WHEN IT IS AGAIN READY TO RECEIVE, IT WILL          SEND AN ØON (ÄÃ1).  ÄESÔERM HAS A LIMITED INPUT BUFFER OF 256          CHARACTERS, WHICH IS OFTEN NOT ENOUGH WHILE RECEIVING TEXT THAT          CAUSES MUCH SCREEN SCROLLING.  ÉF ØON/ØOFF HANDSHAKING HAS BEEN          ENABLED, ÄESÔERM WILL SEND AN ØOFF CHARACTER TO THE HOST WHEN THE          BUFFER BECOMES HALF FULL, AND WILL SEND AN ØON WHEN THE BUFFER          BECOMES EMPTY (AND AN ØOFF WAS PREVIOUSLY SENT).  ÁT LOW BAUD          RATES, THIS OPTION WILL PROBABLY NOT BE USED DURING NORMAL          TERMINAL ACTIVITY.  ÉT IS OFTEN USED DURING HEAVY MENU ACTIVITY          THOUGH, SINCE THE INPUT BUFFER IS NOT EMPTIED.          6.9 ÖIDEO ÍODE          --------------               ÄESÔERM CAN BE SET UP SO THAT ANY INCOMING CHARACTERS ARE          NOT DISPLAYED ON THE SCREEN.  ÔHIS MAY SEEM A LITTLE SILLY, BUT          AT VERY HIGH SPEEDS OF TRANSMISSION, THE TIME TAKEN TO UPDATE THE          SCREEN IS SIGNIFICANT AND WILL SLOW DOWN THE OVERALL TRANSFER          SPEED.  ÓO, BY TURNING OFF THE SCREEN, THE THROUGHPUT WILL GROW.           ÙOU WILL PROBABLY WANT TO HAVE THE CAPTURE BUFFER ON THOUGH, SO          THE TEXT DOESN'T GO TO WASTE!  ÉN COMBINATION WITH THE RAMDISK          AND AUTOMATIC BUFFER SAVE, THIS OPTION REALLY SPEEDS THINGS UP.                                                         24          ÄESÔERM 128 Ö2.00                                       ÊUNE 1990          6.10 ÔUNE ÂIT ÏUT/ÔUNE ÂIT ÉN/ÔUNE ÈALF ÂIT           -------------------------------------------                ×HEN ÄESÔERM WAS BEING DEVELOPED, WE REALIZED THAT THE          SUCCESS OF ANY COMMUNICATIONS DEVICE WAS DEPENDENT ON DATA          QUALITY.  ÔHE ROUTINES THAT ARE BUILT IN TO THE ÃOMMODORE 128 ARE          NOT RELIABLE ABOVE 1200 BAUD, AND SIMPLY DO NOT WORK ABOVE 2400.           ÆOR THIS REASON, WE TOTALLY RE-WROTE THEM!  ÍANY HOURS WERE SPENT          IN FRONT OF OSCILLOSCOPES MAKING SURE THAT THE TIMING FOR EACH          SPEED WAS ACCURATE.  ÄESÔERM IS THE FIRST AND ONLY TERMINAL FOR          THE ÃOMMODORE 128 THAT IS ABLE TO TALK TO 9600 AUTOBAUD MODEMS          SUCH AS THE ÕÓÒOBOTICS ÃOURIER ÈÓÔ.  ÔHESE MODEMS REQUIRE THAT          THE ÂAUD ÒATE BE EXACT.  ÏTHER COMMERCIAL 9600 BAUD TERMINAL          PROGRAMS WERE CLOSE, BUT NO GO.  ÅVEN THOUGH WE SPENT MANY HOURS          ADJUSTING THE TIMING, THERE ARE SOME MODEMS THAT HAVE A HARD TIME          TALKING TO ÄESÔERM EVEN AT LOW SPEEDS.  ÔHESE MODEMS DO NOT SPEAK          AT THE CORRECT SPEEDS (WE HAD A LOOK ON A 'SCOPE!).  ÔHE SPEEDS          AT WHICH THEY TALK SOMETIMES EVEN CHANGE WITH TEMPERATURE!  ÏTHER          MODEMS HAVE BEEN DESIGNED ESPECIALLY FOR THE ÃOMMODORE 64/128,          AND THE TIMING HAS BEEN INTENTIONALLY ADJUSTED TO SUIT THE OLD          ROUTINES.  ÆOR THIS REASON, ÄESÔERM ALLOWS YOU TO FINE-TUNE THE          SPEEDS AT WHICH BITS ARE SENT AND RECEIVED.  ÆOR EACH SPEED,          THERE ARE THREE PARAMETERS:          ÂIT ÏUT : ÔHIS IS THE TIME OF EACH BIT AS TRANSMITTED.          ÂIT ÉN  : ÔHIS IS THE TIME OF EACH BIT AS SAMPLED.          ÂIT ÈALF: ÔHIS IS THE BIT AND A HALF TIME SO THAT BIT-SAMPLING          WILL OCCUR IN THE MIDDLE OF EACH BIT:          ÉNCOMING ÂYTE:                                      \------------ÂIT ÉN                                      Ö                  ÓTARTÂIT                \----------\----------\----------\----------           ------\          \----------\          \----------\          \                 \          \          \          \          \          \                 \----------\          \----------\          \----------\                 \---------------\                        Þ                        \---- ÂIT AND A ÈALF TIME.           ÅACH OF THE THREE PARAMETERS MAY BE ADJUSTED BY +/- 5 UNITS.           ÔHE UNITS CHANGE FOR EACH SPEED, BUT USUALLY REPRESENTS          INCREMENTS OF APPROXIMATELY 1 PERCENT.                                          25          ÄESÔERM 128 Ö2.00                                       ÊUNE 1990          ÎÏÔÅ:  ÔHIS FEATURE HAS BEEN ADDED SO THAT SLIGHT DIFFERENCES IN          SPEED CAN BE ADJUSTED FOR.  ÔHIS IS NOT A CURE FOR LINE NOISE,          JUST AS IT IS NOT A CURE FOR A CHEAP MODEM!          ÎÏÔÅ ÉÉ:  ÉF YOU ARE USING THE ÈÁÒÔ OR ÓWIFTÌINK ÒS-232          CARTRIDGES, THIS OPTION HAS ÎÏ ÅÆÆÅÃÔ!          7 ÔERMINAL ÅMULATION ÍODE ÐARAMETERS           ------------------------------------                ÁMONG THE MANY FEATURES OF ÄESÔERM ARE A NUMBER OF TERMINAL          EMULATION PROTOCOLS.  ÏVER THE LAST FEW YEARS, COMMERCIAL          TERMINAL MANUFACTURERS HAVE TENDED TOWARDS MAKING THE TERMINALS          THEMSELVES QUITE SMART.  ÂY FAR THE MOST POPULAR TERMINAL          PROTOCOL -- AND ONE OF THE MOST POWERFUL -- IS ÄIGITAL ÅQUIPMENT          ÃORPORATION'S ÖÔ100.  ÄESÔERM EMULATES THE ÖÔ102 (A SLIGHTLY          EXPANDED ÖÔ100) PROTOCOL, AS WELL AS ÖÔ52, ÁÎÓÉ Ø3.64 AND THE          ÃOMMODORE ÇRAPHICS PROTOCOLS.  ÔHE ÔERMINAL ÅMULATION MENU          (SEVENTH ENTRY IN THE MAIN MENU OR ÁÌÔ Ç) ALLOWS ONE TO CHANGE          THE WAY IN WHICH ÄESÔERM BEHAVES WHEN SENDING AND DISPLAYING          DATA.          7.1 ÅMULATION ÍODE           ------------------                ÔHE ÅMULATION ÍODE MENU (ÁÌÔ Ô) ALLOWS YOU TO CHOOSE WHICH          OF THE FIVE EMULATION MODES YOU WISH TO USE:          ÁÓÃÉÉ:         ÔHE ÁÓÃÉÉ EMULATION MODE IS THE SIMPLEST OF ALL                         EMULATION MODES, AND SIMPLY DISPLAYS DATA                         UNINTERPRETED. ÔHE ONLY CONTROL CODES IMPLEMENTED                         ARE LINEFEED, FORMFEED (CLEAR SCREEN), TAB,                         CARRIAGE RETURN, BACKSPACE, DELETE AND BELL.  ÔHIS                         EMULATION MODE SHOULD BE USED WHEN TALKING TO                         SYSTEMS THAT HAVE NO SPECIAL EMULATION HANDLING                         CAPABILITIES (SUCH AS ÂÂÓ64).          ÁÎÓÉ:          ÔHE ÁÎÓÉ EMULATION IS A FULL IMPLEMENTATION OF THE                         ÁÎÓÉ Ø3.64 STANDARD, WITH ÉÂÍ ÁÎÓÉ MODIFICATIONS.                          ÔHE ÁÎÓÉ PROTOCOL INCLUDES A SET OF CODES TO                         CONTROL THE POSITION, COLOUR AND STYLE OF PRINTED                         TEXT.  ×HEN ÉÂÍ INCLUDED ÁÎÓÉ CAPABILITY WITH THE                         ÐÃ, THEY ONLY INCLUDED A SUBSET, AND THERE IS A                         MINOR INCOMPATIBILITY WITH ONE OF THE COMMANDS.                          ÆOR THIS REASON, MOST ÉÂÍ-BASED BULLETIN BOARDS                         THAT CLAIM TO USE ÁÎÓÉ ALSO EXPECT THIS                         INCONSISTENCY.  ÓINCE MOST USERS WILL BE CALLING                         ÉÂÍ BASED SYSTEMS, ÄESÔERM ALSO INCLUDES THIS                         INCONSISTENCY. ÆOR THOSE PEOPLE NEEDING EXACT ÁÎÓÉ                         Ø3.64, THE ÖÔ102 MODE SHOULD BE USED.  ÆOR A                                          26          ÄESÔERM 128 Ö2.00                                       ÊUNE 1990                         DISCUSSION OF THE ÁÎÓÉ CODES, SEE THE APPENDICES.                         ÎÏÔÅ:  ÆOR FULL ÉÂÍ STYLE EXTENDED GRAPHICS, THE                         TERMINAL SHOULD HAVE THE 'ÍASK ÈIGH ÂIT' PROTOCOL                         OPTION SET TO 'ÄO ÎOT ÍASK ÈIGH ÂIT'.  ÔHE BYTE                         FRAME SHOULD BE 8-Î-1.          ÖÔ52:          ÖÔ52 IS AN EARLY TERMINAL PROTOCOL DESIGNED BY                         ÄIGITAL ÅQUIPMENT ÃORP.  ÉT ALLOWS THE DIRECT                         POSITIONING OF THE CURSOR, AS WELL AS SOME                         RUDIMENTARY TEXT EDITING FEATURES.  ÓOME LESS-                         POWERFUL REMOTE SYSTEMS SUPPORT THIS TERMINAL TYPE                         BUT NOT ÖÔ100/ÖÔ102.          ÖÔ102:         ÖÔ102 IS A SUPERSET OF THE ALREADY POWERFUL ÖÔ100                         PROTOCOL.  ÖÔ102 CONTAINS ALL OF THE FEATURES THAT                         ÁÎÓÉ GRAPHICS HAS, BUT ALSO THE ABILITY TO DEFINE                         A SCROLLING REGION.  ÔHE INCLUSION OF LINE                         ORIENTED EDITING, CHARACTER INSERTION AND                         CHARACTER DELETION MAKES ÖÔ102 ONE OF THE MOST                         POWERFUL TERMINAL PROTOCOLS INVENTED.          ÃÏÍÍÏÄÏÒÅ:     ÁS MOST PEOPLE KNOW, THE ÃOMMODORE 8 BIT COMPUTERS                         DO NOT SPEAK NORMAL ÁÓÃÉÉ, BUT A SLIGHT                         MODIFICATION TO IT, CALLED ÃÂÍÓÃÉÉ OR ÐÅÔÓÃÉÉ.  ÏN                         THE ÃOMMODORE 64 & 128 COMPUTERS, ÃÂÍÓÃÉÉ INCLUDED                         COLOUR COMMANDS, GRAPHICS, AND CURSOR MOVEMENT                         COMMANDS.  Á FEW BULLETIN BOARDS IN THE ÃOMMODORE                         COMMUNITY ALLOW COMMUNICATION IN ÃÂÍÓÃÉÉ AS WELL                         AS NORMAL ÁÓÃÉÉ.  ÕSE ÃOMMODORE MODE TO USE THESE                         SERVICES.  ÂE SURE THAT WHEN USING ÃOMMODORE                         GRAPHICS MODE, THAT YOU FIRST LOAD THE                         ÄÅÓ.ÃÂÍÃÇÓÅÔ CHARACTER SET, SET TO 8 BITS, AND ÄÏ                         ÎÏÔ HAVE THE HIGH BIT MASKED!          ÆÉÌÔÅÒ:        ÔHIS IS NOT A TERMINAL EMULATION MODE.  ÔHIS                         OPTION ALLOWS YOU TO FILTER THE INCOMING CONTROL                         SEQUENCES AND CAN BE USED IN CONJUNCTION WITH EACH                         OF THE TERMINAL EMULATIONS.  ×HEN THE FILTER IS                         ON, ANY EMULATION SPECIFIC COMMANDS WILL BE                         UNDERSTOOD AS NORMAL, BUT THEY WILL NOT BE ACTED                         ON.  ÔHIS COULD BE USED TO GET AN IDEA OF WHAT THE                         INFORMATION MIGHT LOOK LIKE IF SAVED IN  THE                         BUFFER THEN PRINTED.                                          27          ÄESÔERM 128 Ö2.00                                       ÊUNE 1990          7.2 ÓET ÂACKSPACE           -----------------                ×HEN USING ÄESÔERM, THE ÉÎÓÔ/ÄÅÌ KEY IS CALLED THE          ÂACKSPACE KEY. ÔHE CODE THAT THIS KEY SENDS MAY BE EITHER A TRUE          BACKSPACE (ÃÈÒ$(8)) OR A TRUE DELETE (ÃÈÒ$(127)).  ÔHE CODE THAT          IS SENT WILL DEPEND ON THE ACTION THAT IS REQUIRED.  ÏN          MICROCOMPUTER SYSTEMS, YOU WOULD PROBABLY NEED THIS TO BE SET TO          8.  ÏN MOST MAINFRAMES, THIS KEY WILL NEED TO BE SET TO 127.           ÎÏÔÅ: ÉN ÃOMMODORE ÃOLOUR ÇRAPHICS MODE, THE SETTING OF THIS KEY          HAS NO EFFECT, AS THE SPECIAL ÃOMMODORE BACKSPACE (ÃÈÒ$(20)), OR          INSERT (ÃÈÒ$(148)) ARE USED.          7.3 ÓET ÄELETE           --------------                ×HEN USING ÄESÔERM, THE ÃÌÒ/ÈÏÍÅ KEY IS CALLED THE ÄELETE          KEY. ÔHE CODE THAT IT SENDS MAY, LIKE THE ÂACKSPACE KEY BE EITHER          8 OR 127. ÙOU WILL NORMALLY SET THIS TO BE THE OPPOSITE TO THE          ÂACKSPACE KEY.  ÔHIS KEY IS INCLUDED SO THAT BOTH CODES MAY          EASILY BE SENT (SOME MAINFRAME APPLICATIONS REQUIRE BOTH, AND          ÖÔ102 TERMINALS HAVE BOTH KEYS).          ÎÏÔÅ: ÉN ÃOMMODORE ÃOLOUR ÇRAPHICS MODE, THE SETTING OF THIS KEY          HAS NO EFFECT, AS THE SPECIAL ÃOMMODORE HOME (19) OR SCREEN CLEAR          (147) CHARACTERS ARE USED.                     7.4 ÂACKSPACE ÍODE           ------------------                ÁS WITH MOST THINGS IN LIFE, THERE IS SOME DISAGREEMENT AS          TO WHAT A 'BACKSPACE' SHOULD DO.  ÄESÔERM ALLOWS EITHER TYPE OF          BACKSPACE TO BE USED:          ÎON-ÄESTRUCTIVE:  ÔHE CURSOR SIMPLY MOVES BACK, LEAVING ALL TEXT          ON THE LINE ALONE.          ÄESTRUCTIVE    :  ÔHE CURSOR MOVES BACK DRAGGING ALL THE          CHARACTERS THAT FOLLOW WITH IT.  ÔHAT IS, IT SWALLOWS THE          CHARACTER TO ITS LEFT.          ÎÏÔÅ: ÉN ÖÔ102 MODE, THE DESTRUCTIVE BACKSPACE DOES NOT DRAG          CHARACTERS BACK, IT SIMPLY LEAVES SPACES.  ÎON-ÄESTRUCTIVE MODE          SHOULD BE USED WITH ÖÔ102 & ÖÔ52.                                          28          ÄESÔERM 128 Ö2.00                                       ÊUNE 1990          7.5 ×RAP ÍODE           -------------                ÓOMETIMES IT IS USEFUL TO HAVE ANY CHARACTERS THAT DO NOT          FIT ON A LINE ÎÏÔ TO OVERFLOW TO THE NEXT LINE.  ×RAP ÍODE TURNS          ON AND OFF THE AUTOWRAPPING OF CHARACTERS THAT DO NOT FIT ON A          LINE.  ÉF WRAP MODE IS OFF, THE CHARACTERS SIMPLY START          OVERWRITING EACH OTHER IN THE LAST COLUMN, OTHERWISE THEY WRAP AS          YOU WOULD EXPECT.          ÎÏÔÅ:  ÖÔ102 HAS A SPECIAL COMMAND TO CONTROL AUTOWRAP.  ÆOR THIS          REASON, THERE IS A SPECIAL ×ÒÁÐ FLAG ON THE STATUS LINE.  ÓEE THE          ÅØÐÌÏÒÉÎÇ ÔÅÒÍÉÎÁÌ ÍÏÄÅ SECTION FOR DETAILS.          7.6 ÖÔ-102 ÄÅÃÉÄ           ----------------                ÏVER THE YEARS, THERE HAVE BEEN SLIGHT IMPROVEMENTS ON THE          BASIC ÖÔ100 STANDARD.  ÄESÔERM SUPPORTS ÖÔ102 CODES, AND AS SUCH          IS ALSO COMPATIBLE WITH ÖÔ101 AND ÖÔ100.  ÉN SOME APPLICATIONS,          THE HOST MACHINE CAN ENQUIRE WHICH PARTICULAR TERMINAL TYPE IS          BEING USED. ÅARLY PROGRAMS MAY NOT UNDERSTAND THE CODES FOR          ÖÔ102, SO YOU MAY INSTRUCT ÄESÔERM TO REPORT THAT IT IS A ÖÔ100,          ÖÔ101 OR ÖÔ102.          7.7 ÁNSWERBACK           --------------                ÔHE ÖÔ102 STANDARD INCLUDES AN ENQUIRE CODE. ×HEN RECEIVED,          THIS CODE PROMPTS THE TERMINAL TO SEND A USER-DEFINED STRING.           ÔHIS IS KNOWN AS THE ANSWERBACK STRING.  ÙOU MAY SET THIS TO          WHATEVER YOU LIKE, DEPENDING ON WHAT YOUR PARTICULAR NEED IS.  ÔO          HAVE ÄESÔERM NOT RESPOND TO THE ÅNQUIRE, SIMPLY LEAVE THE          ANSWERBACK BLANK.          7.8 ÓETTING THE TABS           --------------------                ÍANY PROGRAMS DEPEND ON THE TERMINAL'S ABILITY TO DISPLAY          TABS CORRECTLY.  ÄESÔERM ALLOWS THE USER TO SELECT EXACTLY WHERE          THE TAB STOPS ARE TO BE POSITIONED.  ÔO SET THE TABS, SIMPLY          SELECT THE ÓET ÔABS OPTION IN THE ÅMULATION ÍODE MENU.  ÏNCE IN          THE ÓET ÔABS MENU, YOU HAVE SEVERAL CHOICES.  ÔHE ÒESET ÔABS          OPTION WILL SET THE TAB STOPS TO BE EVENLY SPACED EVERY EIGHT          CHARACTERS.  ÔHE ÃLEAR ÔABS OPTION WILL DELETE ALL TAB STOPS.           ÔHE ÅDIT ÔABS OPTION ALLOWS YOU TO PICK AND CHOOSE EXACTLY WHERE          YOU WANT THE TABS TO BE.  ×HEN YOU SELECT THIS OPTION, A CURSOR          WILL APPEAR ON THE TAB RULER, WHICH YOU MAY MOVE LEFT OR RIGHT          WITH THE CURSOR KEYS OR MOUSE ETC.  ÔO PLACE A TAB AT THE CURRENT          POSITION, PRESS RETURN (OR THE LEFT/FIRE BUTTON). ÔO CLEAR A TAB                                          29